apiVersion: apps/v1
kind: Deployment
metadata:
  name: facteur-consumer
  namespace: facteur
spec:
  replicas: 1
  selector:
    matchLabels:
      app: facteur-consumer
  template:
    metadata:
      labels:
        app: facteur-consumer
    spec:
      serviceAccountName: facteur
      containers:
        - name: facteur-consumer
          image: registry.ide-newton.ts.net/lab/facteur:latest
          imagePullPolicy: IfNotPresent
          command: ["facteur"]
          args:
            - consume
            - --config
            - /config/config.yaml
          env:
            - name: FACTEUR_CONFIG_FILE
              value: /config/config.yaml
            - name: FACTEUR_DISCORD_BOT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: facteur-discord
                  key: bot-token
            - name: FACTEUR_DISCORD_APPLICATION_ID
              valueFrom:
                secretKeyRef:
                  name: facteur-discord
                  key: application-id
            - name: FACTEUR_REDIS_URL
              value: redis://facteur-redis:6379/0
            - name: FACTEUR_ARGO_NAMESPACE
              value: argo
            - name: FACTEUR_ARGO_WORKFLOW_TEMPLATE
              value: facteur-dispatch
            - name: FACTEUR_CONSUMER_ENABLED
              value: "true"
          volumeMounts:
            - name: config
              mountPath: /config
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
      volumes:
        - name: config
          configMap:
            name: facteur-config
