# syntax=docker/dockerfile:1.6
FROM ghcr.io/openai/codex-universal:latest

ENV DEBIAN_FRONTEND=noninteractive \
    WORKSPACE=/workspace \
    WORKTREE=/workspace/lab \
    PLAN_OUTPUT_PATH=/workspace/lab/.codex-plan-output.md \
    IMPLEMENTATION_OUTPUT_PATH=/workspace/lab/.codex-implementation.log \
    GIT_TERMINAL_PROMPT=0 \
    BUN_INSTALL=/usr/local

RUN apt-get update \
    && apt-get install -y --no-install-recommends git gh jq python3 curl \
    && rm -rf /var/lib/apt/lists/*

RUN curl -fsSL https://bun.sh/install | bash \
    && mkdir -p /opt/homebrew/bin \
    && ln -s /usr/local/bin/bun /opt/homebrew/bin/bun

RUN bash -lc 'source /root/.nvm/nvm.sh && npm install -g @openai/codex@latest && ln -sf "$(command -v codex)" /usr/local/bin/codex'

RUN mkdir -p "$WORKSPACE" /root/.codex

# Copy Codex auth secret during build (requires BuildKit secret)
RUN --mount=type=secret,id=codex_auth,target=/tmp/codex_auth.json \
    cp /tmp/codex_auth.json /root/.codex/auth.json

COPY apps/froussard/scripts/codex-config-container.toml /root/.codex/config.toml

# Authenticate gh using provided token
RUN --mount=type=secret,id=github_token,target=/tmp/gh_token \
    gh auth login --with-token < /tmp/gh_token

RUN git config --global user.name "codex-automation" \
    && git config --global user.email "codex-automation@users.noreply.github.com"

COPY apps/froussard/scripts/codex-bootstrap.sh /usr/local/bin/codex-bootstrap.sh
COPY apps/froussard/scripts/codex-plan.sh /usr/local/bin/codex-plan.sh
COPY apps/froussard/scripts/codex-implement.sh /usr/local/bin/codex-implement.sh
RUN chmod +x /usr/local/bin/codex-bootstrap.sh /usr/local/bin/codex-plan.sh /usr/local/bin/codex-implement.sh

WORKDIR /workspace
ENTRYPOINT ["/usr/local/bin/codex-bootstrap.sh"]
CMD ["bash"]
