spec:
  destination:
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/gregkonush/lab
    targetRevision: main
applications:
  - name: gitea
    path: apps/gitea
    namespace: gitea
  - name: ecran
    path: apps/ecran/kustomize
    namespace: ecran
    annotations:
      argocd-image-updater.argoproj.io/image-list: ecran=gitea.proompteng.ai/lab/ecran:0.x, ecran-worker=gitea.proompteng.ai/lab/ecran-worker:0.x
  - name: sealed-secrets
    path: apps/sealed-secrets
  - name: cert-manager
    path: apps/cert-manager
    namespace: cert-manager
  - name: arc
    path: apps/arc
  - name: arc-controller
    namespace: arc-controller
    helm:
      repoURL: ghcr.io
      chart: actions/actions-runner-controller-charts/gha-runner-scale-set-controller
      targetRevision: 0.9.1
      valuesObject: |
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
  - name: arc-runners
    namespace: arc-runners
    helm:
      repoURL: ghcr.io
      chart: actions/actions-runner-controller-charts/gha-runner-scale-set
      targetRevision: 0.9.1
      valuesObject: |
        containerMode:
          type: "kubernetes"
          kubernetesModeWorkVolumeClaim:
            accessModes: ["ReadWriteOnce"]
            storageClassName: "dynamic-blob-storage"
            requests:
              storage: 1Gi
        minRunners: 1
        maxRunners: 5
        githubConfigUrl: https://github.com/gregkonush/lab
        githubConfigSecret: github-token
        runnerScaleSetName: arc-arm64
        controllerServiceAccount:
          name: arc-controller-gha-rs-controller
          namespace: arc-controller
        template:
          spec:
            containers:
            - name: runner
              resources:
                requests:
                  cpu: 1000m
                  memory: 1Gi
                limits:
                  cpu: 2000m
                  memory: 2Gi
              image: ghcr.io/actions/actions-runner:latest
              command: ["/home/runner/run.sh"]
              env:
                - name: ACTIONS_RUNNER_CONTAINER_HOOKS
                  value: /home/runner/k8s/index.js
                - name: ACTIONS_RUNNER_POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: ACTIONS_RUNNER_REQUIRE_JOB_CONTAINER
                  value: "false"
              volumeMounts:
                - name: work
                  mountPath: /home/runner/_work
            volumes:
              - name: work
                ephemeral:
                  volumeClaimTemplate:
                    spec:
                      accessModes: [ "ReadWriteOnce" ]
                      storageClassName: "local-path"
                      resources:
                        requests:
                          storage: 1Gi
  - name: cloudnative-pg
    namespace: cloudnative-pg
    helm:
      repoURL: https://cloudnative-pg.io/charts/
      chart: cloudnative-pg
      targetRevision: 0.22.0
  - name: prometheus
    namespace: prometheus
    helm:
      repoURL: https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      targetRevision: 62.4.0
  - name: argocd-image-updater
    path: apps/argocd-image-updater
    namespace: argocd-image-updater
  - name: temporal
    namespace: temporal
    helm:
      repoURL: https://go.temporal.io/helm-charts
      chart: temporal
      targetRevision: 0.44.0
      valuesObject: |
        prometheus:
          enabled: false
        grafana:
          enabled: false
        admintools:
          image:
            repository: temporalio/admin-tools
            tag: 1.24.2-tctl-1.18.1-cli-1.0.0
            pullPolicy: IfNotPresent
        web:
          ingress:
            enabled: true
            className: traefik
            annotations:
              traefik.frontend.rule.type: PathPrefix
            hosts:
              - "temporal.lan"
  - name: sealed-secrets-web
    namespace: sealed-secrets-web
    helm:
      repoURL: https://charts.bakito.net
      chart: sealed-secrets-web
      targetRevision: 3.1.4
      valuesObject: |
        sealedSecrets:
          namespace: kube-system
          serviceName: sealed-secrets
        ingress:
          enabled: true
          className: traefik
          hosts:
          - host: sealed-secrets.lan
            paths:
            - path: /
              pathType: Prefix
  - name: flowise
    namespace: flowise
    helm:
      repoURL: https://cowboysysop.github.io/charts
      chart: flowise
      targetRevision: 3.8.0
      valuesObject: |
        ingress:
          enabled: true
          ingressClassName: traefik
          pathType: Prefix
          hosts:
          - host: flowise.lan
            paths:
            - /
  - name: judge0
    path: apps/judge0
    namespace: judge0
  - name: registry
    path: apps/registry
    namespace: registry
