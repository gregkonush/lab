spec:
  destination:
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/gregkonush/lab
    targetRevision: main
applications:
  - name: gitea
    enabled: true
    path: apps/gitea
    namespace: gitea
  - name: ecran
    enabled: true
    path: apps/ecran/kustomize
    namespace: ecran
    annotations:
      argocd-image-updater.argoproj.io/image-list: ecran=kalmyk.duckdns.org/lab/ecran:0.x, ecran-worker=kalmyk.duckdns.org/lab/ecran-worker:0.x
  - name: sealed-secrets
    enabled: true
    path: apps/sealed-secrets
  - name: cert-manager
    enabled: true
    path: apps/cert-manager
    namespace: cert-manager
  - name: longhorn
    enabled: false
    namespace: longhorn-system
    helm:
      repoURL: https://charts.longhorn.io
      chart: longhorn
      targetRevision: 1.7.1
      valuesObject: |
        preUpgradeChecker:
          jobEnabled: false
  - name: arc
    enabled: true
    path: apps/arc
  - name: arc-controller
    enabled: true
    namespace: arc-controller
    helm:
      repoURL: ghcr.io
      chart: actions/actions-runner-controller-charts/gha-runner-scale-set-controller
      targetRevision: 0.9.1
      valuesObject: |
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
  - name: arc-runners
    enabled: true
    namespace: arc-runners
    helm:
      repoURL: ghcr.io
      chart: actions/actions-runner-controller-charts/gha-runner-scale-set
      targetRevision: 0.9.1
      valuesObject: |
        containerMode:
          type: "kubernetes"
          kubernetesModeWorkVolumeClaim:
            accessModes: ["ReadWriteOnce"]
            storageClassName: "local-path"
            resources:
              requests:
                storage: 1Gi
        minRunners: 3
        maxRunners: 9
        githubConfigUrl: https://github.com/gregkonush/lab
        githubConfigSecret: github-token
        runnerScaleSetName: arc-arm64
        controllerServiceAccount:
          name: arc-controller-gha-rs-controller
          namespace: arc-controller
        template:
          spec:
            initContainers:
              - name: init-dind-externals
                image: ghcr.io/actions/actions-runner:latest
                command: ["cp", "-r", "-v", "/home/runner/externals/.", "/home/runner/tmpDir/"]
                volumeMounts:
                  - name: dind-externals
                    mountPath: /home/runner/tmpDir
            containers:
            - name: runner
              image: ghcr.io/actions/actions-runner:latest
              command: ["/home/runner/run.sh"]
              env:
                - name: ACTIONS_RUNNER_CONTAINER_HOOKS
                  value: /home/runner/k8s/index.js
                - name: ACTIONS_RUNNER_POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: DOCKER_HOST
                  value: unix:///var/run/docker.sock
                - name: ACTIONS_RUNNER_REQUIRE_JOB_CONTAINER
                  value: "false"
              volumeMounts:
                - name: work
                  mountPath: /home/runner/_work
                - name: dind-sock
                  mountPath: /var/run
            - name: dind
              image: docker:dind
              args:
                - dockerd
                - --host=unix:///var/run/docker.sock
                - --group=$(DOCKER_GROUP_GID)
              env:
                - name: DOCKER_GROUP_GID
                  value: "123"
              securityContext:
                privileged: true
              volumeMounts:
                - name: work
                  mountPath: /home/runner/_work
                - name: dind-sock
                  mountPath: /var/run
                - name: dind-externals
                  mountPath: /home/runner/externals
            volumes:
            - name: work
              ephemeral:
                volumeClaimTemplate:
                  spec:
                    accessModes: [ "ReadWriteOnce" ]
                    storageClassName: "local-path"
                    resources:
                      requests:
                        storage: 5Gi
            - name: dind-sock
              emptyDir: {}
            - name: dind-externals
              emptyDir: {}
  - name: cloudnative-pg
    enabled: true
    namespace: cloudnative-pg
    helm:
      repoURL: https://cloudnative-pg.io/charts/
      chart: cloudnative-pg
      targetRevision: 0.22.0
  - name: prometheus
    enabled: false
    namespace: prometheus
    helm:
      repoURL: https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      targetRevision: 62.4.0
  - name: argocd-image-updater
    enabled: true
    path: apps/argocd-image-updater
    namespace: argocd-image-updater
  - name: temporal
    enabled: true
    namespace: temporal
    helm:
      repoURL: https://go.temporal.io/helm-charts
      chart: temporal
      targetRevision: 0.45.1
      valuesObject: |
        prometheus:
          enabled: false
        grafana:
          enabled: false
        web:
          ingress:
            enabled: true
            className: traefik
            annotations:
              traefik.frontend.rule.type: PathPrefix
              kubernetes.io/ingress.class: traefik
              ingress.kubernetes.io/ssl-redirect: "false"
            hosts:
              - "temporal.lan"
  - name: sealed-secrets-web
    enabled: true
    namespace: sealed-secrets-web
    helm:
      repoURL: https://charts.bakito.net
      chart: sealed-secrets-web
      targetRevision: 3.1.4
      valuesObject: |
        sealedSecrets:
          namespace: kube-system
          serviceName: sealed-secrets
        ingress:
          enabled: true
          className: traefik
          hosts:
          - host: sealed-secrets.lan
            paths:
            - path: /
              pathType: Prefix
  - name: flowise
    enabled: false
    namespace: flowise
    helm:
      repoURL: https://cowboysysop.github.io/charts
      chart: flowise
      targetRevision: 3.8.0
      valuesObject: |
        ingress:
          enabled: true
          ingressClassName: traefik
          pathType: Prefix
          hosts:
          - host: flowise.lan
            paths:
            - /
  - name: judge0
    enabled: false
    path: apps/judge0
    namespace: judge0
  - name: registry
    enabled: false
    path: apps/registry
    namespace: registry
  - name: jupyterhub
    enabled: false
    namespace: jupyterhub
    helm:
      repoURL: https://charts.bitnami.com/bitnami
      chart: jupyterhub
      targetRevision: 7.2.17
      valuesObject: |
        ingress:
          enabled: true
          ingressClassName: traefik
          pathType: Prefix
          hostname: jupyterhub.lan
