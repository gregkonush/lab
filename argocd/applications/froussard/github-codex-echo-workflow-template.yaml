apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: github-codex-echo
  namespace: argo-workflows
spec:
  entrypoint: plan
  arguments:
    parameters:
      - name: rawEvent
        value: '{}'
      - name: eventBody
        value: '{}'
  templates:
    - name: plan
      inputs:
        parameters:
          - name: rawEvent
          - name: eventBody
      container:
        image: registry.ide-newton.ts.net/lab/codex-universal:latest
        command: ["/usr/local/bin/codex-bootstrap.sh"]
        args:
          - "/bin/bash"
          - "-lc"
          - |
            set -euo pipefail

            EVENT_FILE=$(mktemp)
            cat <<'JSON' > "$EVENT_FILE"
            {{inputs.parameters.eventBody}}
            JSON

            STAGE=$(jq -r '.stage // ""' "$EVENT_FILE")
            if [[ "$STAGE" != "planning" ]]; then
              echo "Skipping unsupported stage: '$STAGE'"
              exit 0
            fi

            PROMPT_FILE=$(mktemp)
            jq -r '.prompt // empty' "$EVENT_FILE" > "$PROMPT_FILE"
            if [[ ! -s "$PROMPT_FILE" ]]; then
              echo "Missing Codex prompt in event payload" >&2
              exit 1
            fi

            export CODEX_PROMPT="$(cat "$PROMPT_FILE")"
            export ISSUE_REPO="$(jq -r '.repository // empty' "$EVENT_FILE")"
            export ISSUE_NUMBER="$(jq -r '.issueNumber // empty' "$EVENT_FILE")"
            export OUTPUT_PATH=/workspace/lab/.codex-plan-output.md
            export POST_TO_GITHUB=true

            if [[ -z "$ISSUE_REPO" || -z "$ISSUE_NUMBER" || "$ISSUE_NUMBER" == "null" ]]; then
              echo "Missing repository or issue number in event payload" >&2
              exit 1
            fi

            echo "Generating plan for $ISSUE_REPO#$ISSUE_NUMBER"
            codex-plan.sh

            echo "Codex plan output:" >&2
            cat "$OUTPUT_PATH" >&2
