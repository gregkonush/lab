apiVersion: batch/v1
kind: Job
metadata:
  name: observability-minio-buckets
  namespace: observability
  labels:
    app.kubernetes.io/name: observability-minio-buckets
  annotations:
    argocd.argoproj.io/sync-options: Replace=true
spec:
  manualSelector: true
  selector:
    matchLabels:
      app.kubernetes.io/name: observability-minio-buckets
  template:
    metadata:
      labels:
        app.kubernetes.io/name: observability-minio-buckets
    spec:
      restartPolicy: OnFailure
      containers:
        - name: create-buckets
          image: quay.io/minio/mc:RELEASE.2025-08-13T08-35-41Z
          env:
            - name: MINIO_ENDPOINT
              value: http://observability-minio.minio.svc.cluster.local:9000
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: observability-minio-credentials
                  key: rootUser
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: observability-minio-credentials
                  key: rootPassword
            - name: LOKI_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: observability-minio-credentials
                  key: lokiAccessKey
            - name: LOKI_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: observability-minio-credentials
                  key: lokiSecretKey
            - name: TEMPO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: observability-minio-credentials
                  key: tempoAccessKey
            - name: TEMPO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: observability-minio-credentials
                  key: tempoSecretKey
            - name: MIMIR_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: observability-minio-credentials
                  key: mimirAccessKey
            - name: MIMIR_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: observability-minio-credentials
                  key: mimirSecretKey
          command:
            - /bin/sh
            - -c
            - |
              set -euo pipefail
              until mc alias set minio "$MINIO_ENDPOINT" "$MINIO_ROOT_USER" "$MINIO_ROOT_PASSWORD"; do
                echo "waiting for MinIO..."
                sleep 5
              done
              mc admin user add minio "$LOKI_ACCESS_KEY" "$LOKI_SECRET_KEY" || true
              mc admin user add minio "$TEMPO_ACCESS_KEY" "$TEMPO_SECRET_KEY" || true
              mc admin user add minio "$MIMIR_ACCESS_KEY" "$MIMIR_SECRET_KEY" || true
              mc mb -p minio/loki-data || true
              mc mb -p minio/tempo-traces || true
              mc mb -p minio/mimir-blocks || true
              mc mb -p minio/mimir-ruler || true
              mc mb -p minio/mimir-alertmanager || true
              mc admin policy attach minio readwrite --user "$LOKI_ACCESS_KEY" || true
              mc admin policy attach minio readwrite --user "$TEMPO_ACCESS_KEY" || true
              mc admin policy attach minio readwrite --user "$MIMIR_ACCESS_KEY" || true
