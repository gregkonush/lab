---
description: Styling Guide
globs: *.tsx
alwaysApply: false
---

# Styling Guide

## Core Principles
- Use tailwindcss for all styling needs
- Maintain consistent design language
- Optimize for accessibility and performance

## TailwindCSS
- Use utility classes over custom CSS
- Group related classes for readability
- Extract common patterns to components
- Follow consistent ordering: layout → spacing → sizing → typography → colors

## Colors
- Use zinc color palette for backgrounds and text
- Primary text: zinc-900 (dark) / zinc-100 (light)
- Secondary text: zinc-700 (dark) / zinc-300 (light)
- Ensure 4.5:1 contrast ratio for accessibility

## Layout & Sizing
- Never hardcode width/height values
- Use responsive tailwind classes (w-full, h-auto, etc.)
- Use rem values only if absolutely necessary
- Use grid and flex layouts for component structure

## Utilities
- Use cn() utility for conditional classNames:
  ```js
  cn('base-class', isActive && 'active-class')
  ```
- Use CSS variables for dynamic values
- Use tailwind theme() function for accessing config values

## Animation
- Use framer-motion for complex animations
- Use tailwind transitions for simple animations
- Keep animations subtle and purposeful
- Respect reduced-motion preferences

## Component Structure
- Separate view and logic components
- Use composition over complex conditionals
- Keep components focused on single responsibility
- Implement proper ARIA attributes for accessibility
