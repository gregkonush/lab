name: Docker Build Common

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
      context:
        required: true
        type: string
      new_tag:
        required: true
        type: string
      external_repository:
        required: false
        type: string
        default: ''
      platforms:
        required: false
        type: string
        default: 'linux/arm64'
    secrets:
      REGISTRY_USERNAME:
        required: true
      REGISTRY_TOKEN:
        required: true

jobs:
  build:
    runs-on: arc-arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.external_repository }}
          path: ${{ inputs.external_repository && 'external_repo' || '.' }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            kalmyk.duckdns.org/lab/${{ inputs.image_name }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}},value=${{ inputs.new_tag }}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: kalmyk.duckdns.org
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ inputs.platforms }}
          context: ${{ inputs.external_repository && 'external_repo' || inputs.context }}
          file: ${{ inputs.external_repository && 'external_repo/' || '' }}${{ inputs.dockerfile }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          cache-from: type=registry,ref=kalmyk.duckdns.org/lab/${{ inputs.image_name }}:latest
          cache-to: type=inline
