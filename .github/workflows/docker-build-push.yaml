name: Docker Build and Push

on:
  pull_request:
    paths:
      - "apps/reviseur/**"
  # push:
  #   branches:
  #     - "main"
  #   paths:
  #     - "apps/**"
  #     - "packages/**"

jobs:
  changes:
    runs-on: arc-arm64
    outputs:
      proompteng: ${{ steps.filter.outputs.proompteng }}
      findbobastore: ${{ steps.filter.outputs.findbobastore }}
      kitty-krew: ${{ steps.filter.outputs.kitty-krew }}
      reviseur: ${{ steps.filter.outputs.reviseur }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check for file changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            proompteng:
              - 'apps/proompteng/**'
            findbobastore:
              - 'apps/findbobastore/**'
            kitty-krew:
              - 'apps/kitty-krew/**'

  version:
    runs-on: arc-arm64
    needs: changes
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
      changelog: ${{ steps.tag_version.outputs.changelog }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a GitHub release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

  build-proompteng:
    needs: [changes, version]
    if: ${{ needs.changes.outputs.proompteng == 'true' }}
    uses: ./.github/workflows/docker-build-common.yaml
    with:
      image_name: proompteng
      dockerfile: ./apps/proompteng/Dockerfile
      context: .
      new_tag: ${{ needs.version.outputs.new_tag }}
    secrets:
      REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
      REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}

  build-findbobastore:
    needs: [changes, version]
    if: ${{ needs.changes.outputs.findbobastore == 'true' }}
    uses: ./.github/workflows/docker-build-common.yaml
    with:
      image_name: findbobastore
      dockerfile: ./apps/findbobastore/Dockerfile
      context: .
      new_tag: ${{ needs.version.outputs.new_tag }}
    secrets:
      REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
      REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}
      docker_secrets: mapbox_access_token=${{ secrets.NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN }}

  build-kitty-krew:
    needs: [changes, version]
    if: ${{ needs.changes.outputs.kitty-krew == 'true' }}
    uses: ./.github/workflows/docker-build-common.yaml
    with:
      image_name: kitty-krew
      dockerfile: ./apps/kitty-krew/Dockerfile
      context: ./apps/kitty-krew
      new_tag: ${{ needs.version.outputs.new_tag }}
    secrets:
      REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
      REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}

  build-reviseur:
    needs: [changes, version]
    if: ${{ needs.changes.outputs.reviseur == 'true' }}
    uses: ./.github/workflows/docker-build-common.yaml
    with:
      image_name: reviseur
      dockerfile: ./apps/reviseur/Dockerfile
      context: .
      new_tag: ${{ needs.version.outputs.new_tag }}
    secrets:
      REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
      REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}

  cleanup-release:
    runs-on: arc-arm64
    needs: [version, build-proompteng, build-findbobastore, build-kitty-krew]
    if: failure()
    steps:
      - name: Delete release if any build failed
        run: gh release delete ${{ needs.version.outputs.new_tag }} --cleanup-tag --yes
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
