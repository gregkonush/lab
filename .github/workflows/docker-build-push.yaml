name: Docker Build and Push

on:
  push:
    branches:
      - "main"
    paths:
      - "services/ecran/**"
      - "services/juge/**"

jobs:
  version:
    runs-on: arc-arm64
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
      changelog: ${{ steps.tag_version.outputs.changelog }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

  build-ecran-migrator:
    needs: version
    uses: ./.github/workflows/docker-build-common.yaml
    with:
      image_name: ecran-migrator
      dockerfile: ./services/ecran/Dockerfile.migrator
      context: ./services/ecran
      new_tag: ${{ needs.version.outputs.new_tag }}
    secrets:
      REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
      REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}

  build-ecran:
    needs: [version, build-ecran-migrator]
    runs-on: arc-arm64
    defaults:
      run:
        working-directory: services/ecran
    steps:
      - uses: actions/checkout@v4

      - name: Restore cache
        uses: actions/cache/restore@v4
        id: cache
        with:
          path: |
            services/ecran/node_modules
            services/ecran/.next/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('services/ecran/package.json') }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install

      - name: Build
        run: bun run build

      - name: Save cache
        uses: actions/cache/save@v4
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: |
            services/ecran/node_modules
            services/ecran/.next/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('services/ecran/package.json') }}

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: kalmyk.duckdns.org
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Package into Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          context: services/ecran
          file: services/ecran/Dockerfile.package
          platforms: linux/arm64
          tags: kalmyk.duckdns.org/lab/ecran:${{ needs.version.outputs.new_tag }}
          cache-from: type=registry,ref=kalmyk.duckdns.org/lab/ecran:latest
          cache-to: type=inline

  build-ecran-worker:
    needs: [version, build-ecran-migrator]
    uses: ./.github/workflows/docker-build-common.yaml
    with:
      image_name: ecran-worker
      dockerfile: ./services/ecran/Dockerfile.worker
      context: ./services/ecran
      new_tag: ${{ needs.version.outputs.new_tag }}
    secrets:
      REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
      REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}

  build-juge:
    needs: [version, build-ecran-migrator]
    uses: ./.github/workflows/docker-build-common.yaml
    with:
      image_name: juge
      dockerfile: ./services/juge/Dockerfile
      context: ./services/juge/app
      new_tag: ${{ needs.version.outputs.new_tag }}
    secrets:
      REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
      REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}
