// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: github/v1/codex_task.proto

package githubpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CodexTaskStage int32

const (
	CodexTaskStage_CODEX_TASK_STAGE_UNSPECIFIED    CodexTaskStage = 0
	CodexTaskStage_CODEX_TASK_STAGE_PLANNING       CodexTaskStage = 1
	CodexTaskStage_CODEX_TASK_STAGE_IMPLEMENTATION CodexTaskStage = 2
)

// Enum value maps for CodexTaskStage.
var (
	CodexTaskStage_name = map[int32]string{
		0: "CODEX_TASK_STAGE_UNSPECIFIED",
		1: "CODEX_TASK_STAGE_PLANNING",
		2: "CODEX_TASK_STAGE_IMPLEMENTATION",
	}
	CodexTaskStage_value = map[string]int32{
		"CODEX_TASK_STAGE_UNSPECIFIED":    0,
		"CODEX_TASK_STAGE_PLANNING":       1,
		"CODEX_TASK_STAGE_IMPLEMENTATION": 2,
	}
)

func (x CodexTaskStage) Enum() *CodexTaskStage {
	p := new(CodexTaskStage)
	*p = x
	return p
}

func (x CodexTaskStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CodexTaskStage) Descriptor() protoreflect.EnumDescriptor {
	return file_github_v1_codex_task_proto_enumTypes[0].Descriptor()
}

func (CodexTaskStage) Type() protoreflect.EnumType {
	return &file_github_v1_codex_task_proto_enumTypes[0]
}

func (x CodexTaskStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CodexTaskStage.Descriptor instead.
func (CodexTaskStage) EnumDescriptor() ([]byte, []int) {
	return file_github_v1_codex_task_proto_rawDescGZIP(), []int{0}
}

type CodexTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stage           CodexTaskStage         `protobuf:"varint,1,opt,name=stage,proto3,enum=github.v1.CodexTaskStage" json:"stage,omitempty"`
	Prompt          string                 `protobuf:"bytes,2,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Repository      string                 `protobuf:"bytes,3,opt,name=repository,proto3" json:"repository,omitempty"`
	Base            string                 `protobuf:"bytes,4,opt,name=base,proto3" json:"base,omitempty"`
	Head            string                 `protobuf:"bytes,5,opt,name=head,proto3" json:"head,omitempty"`
	IssueNumber     int64                  `protobuf:"varint,6,opt,name=issue_number,json=issueNumber,proto3" json:"issue_number,omitempty"`
	IssueUrl        string                 `protobuf:"bytes,7,opt,name=issue_url,json=issueUrl,proto3" json:"issue_url,omitempty"`
	IssueTitle      string                 `protobuf:"bytes,8,opt,name=issue_title,json=issueTitle,proto3" json:"issue_title,omitempty"`
	IssueBody       string                 `protobuf:"bytes,9,opt,name=issue_body,json=issueBody,proto3" json:"issue_body,omitempty"`
	Sender          string                 `protobuf:"bytes,10,opt,name=sender,proto3" json:"sender,omitempty"`
	IssuedAt        *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=issued_at,json=issuedAt,proto3" json:"issued_at,omitempty"`
	PlanCommentId   *int64                 `protobuf:"varint,12,opt,name=plan_comment_id,json=planCommentId,proto3,oneof" json:"plan_comment_id,omitempty"`
	PlanCommentUrl  *string                `protobuf:"bytes,13,opt,name=plan_comment_url,json=planCommentUrl,proto3,oneof" json:"plan_comment_url,omitempty"`
	PlanCommentBody *string                `protobuf:"bytes,14,opt,name=plan_comment_body,json=planCommentBody,proto3,oneof" json:"plan_comment_body,omitempty"`
	DeliveryId      string                 `protobuf:"bytes,15,opt,name=delivery_id,json=deliveryId,proto3" json:"delivery_id,omitempty"`
}

func (x *CodexTask) Reset() {
	*x = CodexTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_v1_codex_task_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodexTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodexTask) ProtoMessage() {}

func (x *CodexTask) ProtoReflect() protoreflect.Message {
	mi := &file_github_v1_codex_task_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodexTask.ProtoReflect.Descriptor instead.
func (*CodexTask) Descriptor() ([]byte, []int) {
	return file_github_v1_codex_task_proto_rawDescGZIP(), []int{0}
}

func (x *CodexTask) GetStage() CodexTaskStage {
	if x != nil {
		return x.Stage
	}
	return CodexTaskStage_CODEX_TASK_STAGE_UNSPECIFIED
}

func (x *CodexTask) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *CodexTask) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

func (x *CodexTask) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *CodexTask) GetHead() string {
	if x != nil {
		return x.Head
	}
	return ""
}

func (x *CodexTask) GetIssueNumber() int64 {
	if x != nil {
		return x.IssueNumber
	}
	return 0
}

func (x *CodexTask) GetIssueUrl() string {
	if x != nil {
		return x.IssueUrl
	}
	return ""
}

func (x *CodexTask) GetIssueTitle() string {
	if x != nil {
		return x.IssueTitle
	}
	return ""
}

func (x *CodexTask) GetIssueBody() string {
	if x != nil {
		return x.IssueBody
	}
	return ""
}

func (x *CodexTask) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *CodexTask) GetIssuedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.IssuedAt
	}
	return nil
}

func (x *CodexTask) GetPlanCommentId() int64 {
	if x != nil && x.PlanCommentId != nil {
		return *x.PlanCommentId
	}
	return 0
}

func (x *CodexTask) GetPlanCommentUrl() string {
	if x != nil && x.PlanCommentUrl != nil {
		return *x.PlanCommentUrl
	}
	return ""
}

func (x *CodexTask) GetPlanCommentBody() string {
	if x != nil && x.PlanCommentBody != nil {
		return *x.PlanCommentBody
	}
	return ""
}

func (x *CodexTask) GetDeliveryId() string {
	if x != nil {
		return x.DeliveryId
	}
	return ""
}

var File_github_v1_codex_task_proto protoreflect.FileDescriptor

var file_github_v1_codex_task_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x64, 0x65,
	0x78, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xda, 0x04, 0x0a, 0x09, 0x43, 0x6f, 0x64,
	0x65, 0x78, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x2f, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x78, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x37, 0x0a, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2b, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x6e,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x72,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6f,
	0x64, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x49, 0x64, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x70,
	0x6c, 0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x42,
	0x14, 0x0a, 0x12, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x62, 0x6f, 0x64, 0x79, 0x2a, 0x76, 0x0a, 0x0e, 0x43, 0x6f, 0x64, 0x65, 0x78, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4f, 0x44, 0x45, 0x58,
	0x5f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4f, 0x44,
	0x45, 0x58, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x50, 0x4c,
	0x41, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x4f, 0x44, 0x45,
	0x58, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x49, 0x4d, 0x50,
	0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x42, 0x3e, 0x5a,
	0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x65, 0x67,
	0x6b, 0x6f, 0x6e, 0x75, 0x73, 0x68, 0x2f, 0x6c, 0x61, 0x62, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x66, 0x61, 0x63, 0x74, 0x65, 0x75, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_v1_codex_task_proto_rawDescOnce sync.Once
	file_github_v1_codex_task_proto_rawDescData = file_github_v1_codex_task_proto_rawDesc
)

func file_github_v1_codex_task_proto_rawDescGZIP() []byte {
	file_github_v1_codex_task_proto_rawDescOnce.Do(func() {
		file_github_v1_codex_task_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_v1_codex_task_proto_rawDescData)
	})
	return file_github_v1_codex_task_proto_rawDescData
}

var file_github_v1_codex_task_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_v1_codex_task_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_github_v1_codex_task_proto_goTypes = []interface{}{
	(CodexTaskStage)(0),           // 0: github.v1.CodexTaskStage
	(*CodexTask)(nil),             // 1: github.v1.CodexTask
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_github_v1_codex_task_proto_depIdxs = []int32{
	0, // 0: github.v1.CodexTask.stage:type_name -> github.v1.CodexTaskStage
	2, // 1: github.v1.CodexTask.issued_at:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_github_v1_codex_task_proto_init() }
func file_github_v1_codex_task_proto_init() {
	if File_github_v1_codex_task_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_v1_codex_task_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodexTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_v1_codex_task_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_v1_codex_task_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_v1_codex_task_proto_goTypes,
		DependencyIndexes: file_github_v1_codex_task_proto_depIdxs,
		EnumInfos:         file_github_v1_codex_task_proto_enumTypes,
		MessageInfos:      file_github_v1_codex_task_proto_msgTypes,
	}.Build()
	File_github_v1_codex_task_proto = out.File
	file_github_v1_codex_task_proto_rawDesc = nil
	file_github_v1_codex_task_proto_goTypes = nil
	file_github_v1_codex_task_proto_depIdxs = nil
}
